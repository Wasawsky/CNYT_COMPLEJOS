#[[(1,2),(2,3),(3,4)],[(1,2),(2,3),(3,4)]]


#v1=[tuple(map(float, x.split(","))) for x in (input().split(" "))]
#v2=[tuple(map(float, x.split(","))) for x in (input().split(" "))]
"""""""""

"""""""""


"""""""""
m1=[]
m2=[]
for i in range(2):
    vf=[tuple(map(float, x.split(","))) for x in (input().split(" "))]
    m1.append(vf)
for i in range(3):
    vf=[tuple(map(float, x.split(","))) for x in (input().split(" "))]
    m2.append(vf)
"""""""""
#c = tuple(map(float,input().split(",")))

#############################################
#print(v1)
#print(v2)
#print(c)
#print(m1)
#print(m2)
#############################################
#print(sumaVectores(v1,v2))
#print(inversa(v1))
#print(multiplicacionEscalarVector(v1,c))
#print(sumaMatrices(m1,m2))
#print(inversaMatriz(m1))
#print(multiplicacionEscalarMatriz(m1,c))
#print(transpuesta(m1))
#print(matrizConjugada(m1))
#print(matrizAdjunta(m1))
#print(multiplicacionMatrizMatriz(m1,m2))
#print(accion(m1,v1))
#print(sumaDiagonal(m1))
#print(productoInternoMatriz(m1,m2))
#print(normaMatriz(m1))
#print(distanciaMatrizMatriz(m1,m2))
#print(matrizIdentidad(3))
#print(matrizUnitaria(m1))
#print(matrizHermitian(m1))
#print(productoTensor(m1,m2))
################################
#c = tuple(map(float,input().split(",")))
#c1 = tuple(map(int,input().split(",")))
#c2 = tuple(map(int,input().split(",")))


#print(suma(c1,c2))
#print(resta(c1,c2))
#print(multiplicacion(c1,c2))
#print(division(c1,c2))
#print(modulo(c))
#print(conjugado(c))
#print(convpolaracartesiano(c))
#print(convcartesianoapolar(c))
#print(fase(c))
################################


"""
###ANOTACIONES

FORMA DE VECTOR SENCILLA 1*N

V = [V1,V2,V3,...VN]

FORMA DE VECTOR N*1 EN MATRIZ

M = [[V1],[V2],[V3],....,[VN]]

FORMA DE VECTOR 1*N EN MATRIZ

M = [[V1,V2,V3,...VN]]

FORMA DE MATRIZ M*N

MA=[MA1[MA11, MA12, MA13, .....MA1N],
    MA2[MA21, MA22, MA23, .....MA1N],
    MA3[MA31, MA32, MA33, .....MA1N],
    ......,
    MAM[MAM1, MAM2, MAM3,.....,MAMN]]

"""